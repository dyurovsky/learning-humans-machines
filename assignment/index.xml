<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assignment details | Learning in Humans and Machines</title>
    <link>/learning-humans-machines/assignment/</link>
      <atom:link href="/learning-humans-machines/assignment/index.xml" rel="self" type="application/rss+xml" />
    <description>Assignment details</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <image>
      <url>/learning-humans-machines/img/social-image.png</url>
      <title>Assignment details</title>
      <link>/learning-humans-machines/assignment/</link>
    </image>
    
    <item>
      <title>Homework 1</title>
      <link>/learning-humans-machines/assignment/01-rescorla-wagner/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/learning-humans-machines/assignment/01-rescorla-wagner/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#the-rescorla-wagner-model&#34;&gt;The Rescorla-Wagner Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#simple-conditioning&#34;&gt;Simple conditioning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#extinction&#34;&gt;Extinction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#blocking&#34;&gt;Blocking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conditioned-inhibition&#34;&gt;Conditioned inhibition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style type=&#34;text/css&#34;&gt;
h4 {
  margin-top: 10px;
  margin-bottom: 10px;
  padding-top: 10px;
  padding-bottom: 10px;
  border-style: solid;
  background-color: #ffc713;
  color: #d45026;
}

&lt;/style&gt;
&lt;p&gt;&lt;strong&gt;Getting your assignment: &lt;/strong&gt; You can find template code for your submission here at this &lt;a href=&#34;https://classroom.github.com/a/03b_G9Em&#34;&gt;GitHub Classroom link&lt;/a&gt;. All of the code you write you should go in &lt;code&gt;hw1.Rmd&lt;/code&gt;, and please knit the Markdown file in your completed submission.&lt;/p&gt;
&lt;div id=&#34;the-rescorla-wagner-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Rescorla-Wagner Model&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;../../class/03-class/papers/rescorlawagner1972.pdf&#34;&gt;Rescorla-Wagner model&lt;/a&gt;, developed by Robert Rescorla and Allen Wagner in 1972, was extremely influential at the time of its publication because it was able to explain several puzzling findings in Pavlovian condition, especially the phenomenon of blocking. It has since been extended by researchers working in Reinforcement learning to account for a number of other interesting phenomena. It is also the basis of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Delta_rule&#34;&gt;delta rule&lt;/a&gt; used for training simple neural networks, as you’ll see later on the course.&lt;/p&gt;
&lt;p&gt;You’ll work with the same simplified version of the model that you saw in &lt;a href=&#34;../../class/03-class/slides/associative_learning.pdf&#34;&gt;class&lt;/a&gt;. The model describes the change in strength associated with a conditioned stimulus (&lt;span class=&#34;math inline&#34;&gt;\(\Delta V\)&lt;/span&gt;) with this equation:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\Delta V = \alpha \cdot \left(\lambda - V_{total}\right)\]&lt;/span&gt;&lt;/p&gt;
&lt;div id=&#34;problem-1-describe-in-words-what-each-symbol-in-this-equation-means-and-how-it-is-related-to-learning-1-point.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Problem 1: Describe, in words, what each symbol in this equation means and how it is related to learning (1 point).&lt;/h4&gt;
&lt;p&gt;Now let’s turn this equation into &lt;code&gt;R&lt;/code&gt; code. You’ll write a function called &lt;code&gt;rw_delta_v&lt;/code&gt; that computes &lt;span class=&#34;math inline&#34;&gt;\(\Delta V\)&lt;/span&gt; according to the Rescorla-Wagner equation. It should take all three of relevant parameters(&lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;, and &lt;span class=&#34;math inline&#34;&gt;\(V_{total}\)&lt;/span&gt;), and also the current weight of the conditioned stimulus (&lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;). It should return the amount that this weight will change.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;problem-2-write-rw_delta_v-1-point.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Problem 2: Write &lt;code&gt;rw_delta_v&lt;/code&gt; (1 point).&lt;/h4&gt;
&lt;p&gt;You’ll use the stub in the R Markdown file in the GitHub Repository that looks like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rw_delta_v &amp;lt;- function(V, Vtotal, alpha = .1, lambda = 1) {
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One thing to notice is that function parameters in &lt;code&gt;R&lt;/code&gt; can have defaults specified. If you don’t pass in a value for that parameter, it will get the default value inside the function.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;simple-conditioning&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Simple conditioning&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;learning-humans-machines/img/assignments/forward_conditioning.png&#34; width=&#34;60%&#34; style=&#34;display: block; margin: auto auto auto 0;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To get started, you’ll simulate of simple conditioning experiment in which someone experiences 10 trials of positive reinforcement in response to a conditioned stimulus. You’ll want to produce a plot of the strength of the conditioned stimulus over the course of these 10 trials so you can see the changes that the model predicts.&lt;/p&gt;
&lt;p&gt;There are lots of ways of setting up this experiment in &lt;code&gt;R&lt;/code&gt;, and you’re welcome to do it however you like. In case you’d like a hand to get started, he’s one strategy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Make a &lt;code&gt;tibble&lt;/code&gt; with 2 columns: &lt;code&gt;trial&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt;. The &lt;code&gt;trial&lt;/code&gt;column will have the values &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; through &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt;, and the &lt;code&gt;V&lt;/code&gt; column will start as all &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;s.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Write a for loop that iterates over the numbers &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; through &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt;—these will index into the rows of your &lt;code&gt;tibble&lt;/code&gt;. Set the value of the &lt;code&gt;V&lt;/code&gt; column in each row to the result of calling your &lt;code&gt;rw_delta_v&lt;/code&gt; function on the value of &lt;code&gt;V&lt;/code&gt; in the previous row.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make a plot with &lt;code&gt;trial&lt;/code&gt; on the x-axis and &lt;code&gt;V&lt;/code&gt; on the y-axis. You can make one plot for all four of your simulations if you’re feeling comfortable with the &lt;code&gt;tidyverse&lt;/code&gt;, or 4 seperate plots.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;problem-3-run-4-simulations-of-the-experimenttry-2-different-levels-of-alpha-and-2-different-levels-of-lambda.-what-effect-does-these-parameters-have-on-the-model-predictions-3-points.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Problem 3: Run 4 simulations of the experiment–try 2 different levels of &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; and 2 different levels of &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;. What effect does these parameters have on the model predictions? (3 points).&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;extinction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extinction&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;learning-humans-machines/img/assignments/extinction.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;Now let’s see what happens if we take the reinforcer away. Set up a simulation where the participant is exposed to 10 trials in of positive reinforcement in response to a conditioned stimulus, and then 10 trials in which they get no reinforcement (&lt;span class=&#34;math inline&#34;&gt;\(\lambda = 0\)&lt;/span&gt;). Then make a plot of &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; over the course of the experiment.&lt;/p&gt;
&lt;div id=&#34;problem-4-try-the-same-parameter-values-that-you-used-above-in-this-new-experiment.-how-does-the-extinction-curve-depend-on-alpha-and-lambda-2-points.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Problem 4: Try the same parameter values that you used above in this new experiment. How does the extinction curve depend on &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;? (2 points).&lt;/h4&gt;
&lt;p&gt;This should be a fairly straightforward extension of the code you wrote for the last Problem. The critical thing will be to make sure that you are using the right value of the &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; parameter on each trial—remember, no reinforcer should have no reward and thus &lt;span class=&#34;math inline&#34;&gt;\(\lambda = 0\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;blocking&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Blocking&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;learning-humans-machines/img/assignments/blocking.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;Now you’re ready to test Rescorla-Wagner’s ability to account for the Blocking phenomenon. In this simulation, you’ll have two cues–&lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. For the first 10 trials, the simulated participant will be exposed to cue &lt;code&gt;x&lt;/code&gt; and be positively reinforced. Then, on the subsequent 30 trials, both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; will be present and the participant will get reinforced.&lt;/p&gt;
&lt;p&gt;One way to make this simulation work is to include two more columns in your tibble &lt;code&gt;x_present&lt;/code&gt; and &lt;code&gt;y_present&lt;/code&gt; which indicate whether each cue is present on each trial. You then want to make sure that you simulate updating the weight for all cues that are present &lt;span class=&#34;math inline&#34;&gt;\(\Delta V\)&lt;/span&gt;. And make sure that &lt;span class=&#34;math inline&#34;&gt;\(V_{total}\)&lt;/span&gt; has the right value on each trial!&lt;/p&gt;
&lt;div id=&#34;problem-5-implement-the-blocking-experiment-described-above-and-make-a-plot-of-the-weights-of-each-of-the-two-cues-over-the-course-of-the-40-trials.-you-can-pick-any-values-for-alpha-and-lambda-3-points.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Problem 5: Implement the blocking experiment described above and make a plot of the weights of each of the two cues over the course of the 40 trials. You can pick any values for &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; (3 points).&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conditioned-inhibition&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conditioned inhibition&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;learning-humans-machines/img/assignments/conditioned_inhibition.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;Finally, you’re ready to simulate a phenomenon we talked about in class but that you didn’t see directly: Conditioned inhibition. The setup is similar to blocking–first one cue (&lt;code&gt;x&lt;/code&gt;) is presented and reinforced, and then &lt;code&gt;x&lt;/code&gt; and another cue &lt;code&gt;y&lt;/code&gt; appear together. But, this time their combination is &lt;strong&gt;not&lt;/strong&gt; reinforced. As a result, people (and the model) learn a negative value for &lt;code&gt;y&lt;/code&gt;. Intuitively, &lt;code&gt;y&lt;/code&gt; is the reason that &lt;code&gt;x&lt;/code&gt; appearing did not lead to a positive reinforcer.&lt;/p&gt;
&lt;div id=&#34;problem-6-implement-the-a-conditioned-inhibition-experiment-just-like-your-blocking-experiment-above-except-this-time-without-reinforcement-on-the-30-trials-with-both-stimuli.-make-a-plot-of-the-values-of-the-two-cues-over-the-course-of-the-experiment.-pick-any-values-for-alpha-and-lambda-2-points.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Problem 6: Implement the a conditioned inhibition experiment just like your blocking experiment above, except this time without reinforcement on the 30 trials with both stimuli. Make a plot of the values of the two cues over the course of the experiment. Pick any values for &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; (2 points).&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
